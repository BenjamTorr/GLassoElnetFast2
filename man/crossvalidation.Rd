% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crossvalidation.R
\name{crossvalidation}
\alias{crossvalidation}
\title{Crossvalidation Function for Graphical Elastic Net}
\usage{
crossvalidation(
  nfold = 5L,
  Y,
  lambda,
  alpha,
  ind = NULL,
  type = NULL,
  Target = NULL,
  outer.maxit = 1000,
  outer.thr = 1e-05,
  inner.maxit = 1000,
  inner.thr = outer.thr/10,
  penalize.diagonal = TRUE,
  cor = FALSE,
  rope = FALSE
)
}
\arguments{
\item{nfold}{Number of crossvalidation folds: integer value}

\item{Y}{Data matrix: n x p matrix, where p is the number of predictors and n the number of observations}

\item{lambda}{Penalization parameter: p-length vector of values to be minimized over}

\item{alpha}{Tuning paremeter: scalar value between 0 and 1. 0 corresponds to ridge (L2) type penalty and 1 corresponds to lasso (L1) type penalty. Values inbetween lead to elastic net type penalties.}

\item{ind}{Index order: n-length permutation vector. The order of observations put into the crossvalidation sets.}

\item{type}{Type of Target matrix. Possible values: NULL,"Identity","vI","Regression","Eigenvalue","MSC". Default is set to NULL.}

\item{Target}{Fixed Target matrix: p x p matrix. Is ignored if type is not NULL. Default is set to NULL.}

\item{outer.maxit}{Maximal number of iterations for outer loop. Default is set to 1000.}

\item{outer.thr}{Threshold for convergence of the outer loop. Default is set to 1e-5.  Iterations stop when average absolute parameter change is less than outer.thr*average(abs(offdiag(S)))}

\item{inner.maxit}{Maximal number of iterations for inner loop. Default is set to 1000.}

\item{inner.thr}{Threshold for inner loop. Default is equal to outer.thr.}

\item{penalize.diagonal}{Should the diagonal of Theta be penalized. Default is set to TRUE.}

\item{cor}{Should correlation matrices be used instead of covariance matrices. Default is set to FALSE.}

\item{rope}{Should the rope algorithm be used. If TRUE, alpha is automatically set to 0. Default is set to FALSE.}
}
\value{
A list with the following
  \item{optimal}{Optimal value from lambda vector decided by crossvalidation}
  \item{lambda}{Sorted lambda vector from the input}
  \item{CV}{Average crossvalidation values of the sorted lambda vector}
  \item{Theta}{Estimated precision matrix for the optimal lambda value}
  \item{W}{Estimated covariance matrix for the optimal lambda value. Omitted if rope=TRUE.}
  \item{niter}{Number of iterations of outer.loop used. Omitted if rope=TRUE.}
  \item{del}{Change in parameter value at convergence. Omitted if rope=TRUE.}
  \item{conv}{Returns if the algorithm converged before reaching the maximal number of outer iterations. Omitted if rope=TRUE.}
}
\description{
Calculates with nfold crossvalidation for a given set of scalars in the lambda vector the optimal penalty parameter to a given data set Y.
This parameter is then applied to the sample covariance S of Y and the resulting Theta and W is returned.
If cor=TRUE the procedure is done with correlation matrices instead of covariance matrices.
}
\examples{
\donttest{
set.seed(1)
n <- 10
p <- 5
Y <- array(rnorm(n*p),dim=c(n,p)) # data-matrix
object <- crossvalidation(nfold=5,Y=Y,ind=sample(1:n),lambda=seq(0.1,0.4,length.out=20))
}
}
\references{
Jerome Friedman, Trevor Hastie and Rob Tibshirani (2019).
Graphical Lasso: Estimation of Gaussian Graphical Models.
CRAN. http://www-stat.stanford.edu/~tibs/glasso
}
